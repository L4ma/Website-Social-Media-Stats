{"ast":null,"code":"// Get version from package.json or GitHub environment variables\nexport const getVersion = () => {\n  // Debug: Log all available environment variables\n  console.log('Version Debug:', {\n    REACT_APP_VERSION: process.env.REACT_APP_VERSION,\n    REACT_APP_GITHUB_VERSION: process.env.REACT_APP_GITHUB_VERSION,\n    REACT_APP_GITHUB_TAG: process.env.REACT_APP_GITHUB_TAG,\n    NODE_ENV: process.env.NODE_ENV\n  });\n\n  // Check for GitHub tag (for releases) - this should be a proper version like v1.2.3\n  if (process.env.REACT_APP_GITHUB_TAG && process.env.REACT_APP_GITHUB_TAG.startsWith('v')) {\n    const version = process.env.REACT_APP_GITHUB_TAG.replace('v', '');\n    console.log('Using GitHub tag version:', version);\n    return version;\n  }\n\n  // Check for GitHub version (for releases) - should be a proper version, not branch name\n  if (process.env.REACT_APP_GITHUB_VERSION && process.env.REACT_APP_GITHUB_VERSION.match(/^\\d+\\.\\d+\\.\\d+/)) {\n    console.log('Using GitHub version:', process.env.REACT_APP_GITHUB_VERSION);\n    return process.env.REACT_APP_GITHUB_VERSION;\n  }\n\n  // Fallback to package.json version\n  const fallbackVersion = process.env.REACT_APP_VERSION || '0.0.6';\n  console.log('Using fallback version:', fallbackVersion);\n  return fallbackVersion;\n};","map":{"version":3,"names":["getVersion","console","log","REACT_APP_VERSION","process","env","REACT_APP_GITHUB_VERSION","REACT_APP_GITHUB_TAG","NODE_ENV","startsWith","version","replace","match","fallbackVersion"],"sources":["/Users/marcodamm/Desktop/Stats_SocialMedia/src/utils/version.ts"],"sourcesContent":["// Get version from package.json or GitHub environment variables\nexport const getVersion = (): string => {\n  // Debug: Log all available environment variables\n  console.log('Version Debug:', {\n    REACT_APP_VERSION: process.env.REACT_APP_VERSION,\n    REACT_APP_GITHUB_VERSION: process.env.REACT_APP_GITHUB_VERSION,\n    REACT_APP_GITHUB_TAG: process.env.REACT_APP_GITHUB_TAG,\n    NODE_ENV: process.env.NODE_ENV\n  });\n\n  // Check for GitHub tag (for releases) - this should be a proper version like v1.2.3\n  if (process.env.REACT_APP_GITHUB_TAG && process.env.REACT_APP_GITHUB_TAG.startsWith('v')) {\n    const version = process.env.REACT_APP_GITHUB_TAG.replace('v', '');\n    console.log('Using GitHub tag version:', version);\n    return version;\n  }\n  \n  // Check for GitHub version (for releases) - should be a proper version, not branch name\n  if (process.env.REACT_APP_GITHUB_VERSION && \n      process.env.REACT_APP_GITHUB_VERSION.match(/^\\d+\\.\\d+\\.\\d+/)) {\n    console.log('Using GitHub version:', process.env.REACT_APP_GITHUB_VERSION);\n    return process.env.REACT_APP_GITHUB_VERSION;\n  }\n  \n  // Fallback to package.json version\n  const fallbackVersion = process.env.REACT_APP_VERSION || '0.0.6';\n  console.log('Using fallback version:', fallbackVersion);\n  return fallbackVersion;\n}; "],"mappings":"AAAA;AACA,OAAO,MAAMA,UAAU,GAAGA,CAAA,KAAc;EACtC;EACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE;IAC5BC,iBAAiB,EAAEC,OAAO,CAACC,GAAG,CAACF,iBAAiB;IAChDG,wBAAwB,EAAEF,OAAO,CAACC,GAAG,CAACC,wBAAwB;IAC9DC,oBAAoB,EAAEH,OAAO,CAACC,GAAG,CAACE,oBAAoB;IACtDC,QAAQ,EAAEJ,OAAO,CAACC,GAAG,CAACG;EACxB,CAAC,CAAC;;EAEF;EACA,IAAIJ,OAAO,CAACC,GAAG,CAACE,oBAAoB,IAAIH,OAAO,CAACC,GAAG,CAACE,oBAAoB,CAACE,UAAU,CAAC,GAAG,CAAC,EAAE;IACxF,MAAMC,OAAO,GAAGN,OAAO,CAACC,GAAG,CAACE,oBAAoB,CAACI,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;IACjEV,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEQ,OAAO,CAAC;IACjD,OAAOA,OAAO;EAChB;;EAEA;EACA,IAAIN,OAAO,CAACC,GAAG,CAACC,wBAAwB,IACpCF,OAAO,CAACC,GAAG,CAACC,wBAAwB,CAACM,KAAK,CAAC,gBAAgB,CAAC,EAAE;IAChEX,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEE,OAAO,CAACC,GAAG,CAACC,wBAAwB,CAAC;IAC1E,OAAOF,OAAO,CAACC,GAAG,CAACC,wBAAwB;EAC7C;;EAEA;EACA,MAAMO,eAAe,GAAGT,OAAO,CAACC,GAAG,CAACF,iBAAiB,IAAI,OAAO;EAChEF,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEW,eAAe,CAAC;EACvD,OAAOA,eAAe;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}